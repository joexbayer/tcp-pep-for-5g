\contentsline {chapter}{\numberline {1}Intro}{4}{}%
\contentsline {chapter}{\numberline {2}Background}{5}{}%
\contentsline {section}{\numberline {2.1}TCP/IP}{5}{}%
\contentsline {subsection}{\numberline {2.1.1}Congestion Control}{6}{}%
\contentsline {subsection}{\numberline {2.1.2}3 Way handshake (0 RTT)}{7}{}%
\contentsline {subsection}{\numberline {2.1.3}TCP Options and Fast Open}{8}{}%
\contentsline {section}{\numberline {2.2}Future of wireless communication.}{9}{}%
\contentsline {subsection}{\numberline {2.2.1}5G Millimetre Wave}{9}{}%
\contentsline {subsection}{\numberline {2.2.2}Buffering}{10}{}%
\contentsline {subsubsection}{Buffer bloat}{10}{}%
\contentsline {subsubsection}{Packet Scheduling}{10}{}%
\contentsline {subsection}{\numberline {2.2.3}Non-Interactive Applications}{11}{}%
\contentsline {section}{\numberline {2.3}Proxy}{11}{}%
\contentsline {subsection}{\numberline {2.3.1}PEP}{12}{}%
\contentsline {subsection}{\numberline {2.3.2}PEP for wireless communication}{12}{}%
\contentsline {subsection}{\numberline {2.3.3}Transparent vs Non-Transparent}{12}{}%
\contentsline {section}{\numberline {2.4}Linux}{13}{}%
\contentsline {subsection}{\numberline {2.4.1}Kernel Modules}{13}{}%
\contentsline {chapter}{\numberline {3}Design}{14}{}%
\contentsline {section}{\numberline {3.1}Justification for designing a PEP}{14}{}%
\contentsline {section}{\numberline {3.2}PEP Programming}{15}{}%
\contentsline {subsection}{\numberline {3.2.1}Choosing the Programming Language}{15}{}%
\contentsline {paragraph}{The C Programming Language}{15}{}%
\contentsline {subsection}{\numberline {3.2.2}Kernel Module Vs. Userspace Application}{15}{}%
\contentsline {subsection}{\numberline {3.2.3}Optimal Choices for PEP Performance}{16}{}%
\contentsline {section}{\numberline {3.3}PEP Transparency}{16}{}%
\contentsline {subsection}{\numberline {3.3.1}Transparent}{16}{}%
\contentsline {subsection}{\numberline {3.3.2}Non-Transparent}{16}{}%
\contentsline {subsection}{\numberline {3.3.3}Choosing a Non-Transparent PEP}{17}{}%
\contentsline {section}{\numberline {3.4}Connection Handling in PEP}{17}{}%
\contentsline {subsection}{\numberline {3.4.1}Connection Splitting}{17}{}%
\contentsline {subsection}{\numberline {3.4.2}PEP Selection}{18}{}%
\contentsline {subsection}{\numberline {3.4.3}Connection Establishment}{18}{}%
\contentsline {paragraph}{TCP Options}{18}{}%
\contentsline {paragraph}{TCP Fast Open}{19}{}%
\contentsline {paragraph}{Optimal Choice}{19}{}%
\contentsline {section}{\numberline {3.5}Scheduling Algorithms}{19}{}%
\contentsline {section}{\numberline {3.6}Summary}{20}{}%
\contentsline {chapter}{\numberline {4}Implementation}{21}{}%
\contentsline {section}{\numberline {4.1}Kernel Module}{21}{}%
\contentsline {section}{\numberline {4.2}TLV Library}{22}{}%
\contentsline {section}{\numberline {4.3}PEP}{22}{}%
\contentsline {section}{\numberline {4.4}PEP Connect}{22}{}%
\contentsline {chapter}{\numberline {5}Evaluation}{23}{}%
\contentsline {section}{\numberline {5.1}Initial configuration}{23}{}%
\contentsline {subsection}{\numberline {5.1.1}Traffic Control Options}{23}{}%
\contentsline {subsection}{\numberline {5.1.2}Scheduling Algorithms}{23}{}%
\contentsline {paragraph}{FIFO}{23}{}%
\contentsline {paragraph}{FQ CoDel: IMPORTANT}{24}{}%
\contentsline {paragraph}{PFIFO}{24}{}%
\contentsline {subsection}{\numberline {5.1.3}Interactive vs PEP}{24}{}%
\contentsline {subsection}{\numberline {5.1.4}PEP vs E2E tests}{24}{}%
\contentsline {subsection}{\numberline {5.1.5}10x10 tests}{25}{}%
\contentsline {subsection}{\numberline {5.1.6}Spike}{25}{}%
\contentsline {chapter}{\numberline {6}Conclusion}{26}{}%
\contentsline {section}{\numberline {6.1}Future Work}{26}{}%
